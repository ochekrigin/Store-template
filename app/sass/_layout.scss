//
// Layout
// --------------------------------------------------

// Grid base setup
// --------------------------------------------------

// Grid basic variables
$width: 1183px;
$gutter: 20px;
$gutter-small: 14px;
$columns: 15;
$column-width: $width / $columns;
$flexible-column-width: 100% / $columns;


// Grid breakpoint variables
$xs-breakpoint-columns: 1;
$sm-breakpoint-columns: 4;
$md-breakpoint-columns: 8;
$lg-breakpoint-columns: 15;
$xl-breakpoint-columns: 15;
$lxl-breakpoint-columns: 15;

// Grid breakpoint name variables
$xs-breakpoint-name: 'xs';
$sm-breakpoint-name: 'sm';
$md-breakpoint-name: 'md';
$lg-breakpoint-name: 'lg';
$xl-breakpoint-name: 'xl';
$lxl-breakpoint-name:'lxl';

// Layout base blocks
// --------------------------------------------------

#wrapper {
  width: 100%;
  &.boxed-view {
    max-width: 1280px;
    margin: 0 auto;
    @include box-shadow(0 0 18px rgba(0,0,0,0.3));
  }
}
#header {width: 100%;}
#main {
  overflow: hidden;
  width: 100%;
}
#footer {width: 100%;}
.container {
  margin: 0 auto;
  padding: 0 $gutter-small;
  @media only screen and (min-width: $xl-breakpoint) {padding: 0 $gutter / 2;}
  &:after {@extend %clearfix;}
}

// Grid row setup
.grid-row {
  margin-bottom: $padding-large-vertical;
  margin-left: -7px;
  margin-right: -7px;
  position: relative;
  @media only screen and (min-width: $xl-breakpoint) {
    margin-left: -($gutter / 2);
    margin-right: -($gutter / 2);
  }
  &:after {@extend %clearfix;}
  &.no-indent {margin: 0;}
  &.no-b-indent {margin-bottom: 0;}
  // Styles for sample columns in ui
  .pre {
    @include border-radius($border-radius-base);
    background: $gray-light;
    text-align: center;
    padding: $padding-large-vertical $padding-base-horizontal;
    .is-desktop &:hover {background: $gray-base;}
  }
  &.frame-holder {
    padding: 0 0 67px;
    @media only screen and (min-width: $lg-breakpoint) {padding: 0;}
  }
}

// Grid col setup
[class^="grid-col-"] {
  @include box-sizing(border-box);
  &.inline-block {
    display: inline-block;
    float: none;
    margin: 0 -4px 0 0;
    vertical-align: bottom;
  }
}
.small-half-width {
  @media only screen and (max-width: $lg-breakpoint) {width: 50% !important;}
}
.half-width {width: 40% !important;}

// Grid mixins
@mixin generate-grid($breakpoint-name, $breakpoint, $breakpoint-columns) {
  @if $breakpoint == 320px {

    // Generate classes for elements displaying
    .#{$breakpoint-name}-hidden {
      display: none !important;
    }
    .#{$breakpoint-name}-visible {
      display: block !important;
    }

    // Generate container styles
    .container {max-width: $width;}

    // Generate columns classes
    @for $i from 1 to $columns + 1 {
      .grid-col-#{$breakpoint-name}-#{$i} {
        float: left;
        padding: 0 $gutter-small / 2;
        width: $i * $flexible-column-width;
        @media only screen and (min-width: $xl-breakpoint) {padding: 0 $gutter / 2;}
      }
    }

    // Generate push and pull classes
    @for $i from 1 to $columns + 1 {
      .grid-prepend-#{$breakpoint-name}-#{$i} {
        padding-left: $i * $flexible-column-width;
      }
    }
    @for $i from 1 to $columns + 1 {
      .grid-append-#{$breakpoint-name}-#{$i}{
        padding-right: $i * $flexible-column-width;
      }
    }

  }
  @else {
    @media only screen and (min-width: $breakpoint) {

      // Generate classes for elements display options
      .is-#{$breakpoint-name}-hidden {
        display: none !important;
      }
      .is-#{$breakpoint-name}-visible {
        display: block !important;
      }

      // Generate container styles
      .container {max-width: $width;}

      // Generate columns classes
      @for $i from 1 to $columns + 1 {
        .grid-col-#{$breakpoint-name}-#{$i} {
          float: left;
          padding: 0 $gutter-small / 2;
          width: $i * $flexible-column-width;
         @media only screen and (min-width: $xl-breakpoint) {padding: 0 $gutter / 2;} 
        }
      }

      // Generate push and pull classes
      @for $i from 1 to $columns + 1 {
        .grid-prepend-#{$breakpoint-name}-#{$i} {
          padding-left: $i * $flexible-column-width;
        }
      }
      @for $i from 1 to $columns + 1 {
        .grid-append-#{$breakpoint-name}-#{$i}{
          padding-right: $i * $flexible-column-width;
        }
      }

    }
  }
}

// Grid generation
@include generate-grid($xs-breakpoint-name, $xs-breakpoint, $xs-breakpoint-columns);
@include generate-grid($sm-breakpoint-name, $sm-breakpoint, $sm-breakpoint-columns);
@include generate-grid($md-breakpoint-name, $md-breakpoint, $md-breakpoint-columns);
@include generate-grid($lg-breakpoint-name, $lg-breakpoint, $lg-breakpoint-columns);
@include generate-grid($xl-breakpoint-name, $xl-breakpoint, $xl-breakpoint-columns);
@include generate-grid($lxl-breakpoint-name, $lxl-breakpoint, $lxl-breakpoint-columns);
