//
// Forms
// --------------------------------------------------

// Normalize non-controls
//
// Restyle and baseline non-control form elements.

label {
  display: inline-block;
  font-weight: bold;
  margin-bottom: 5px;
}

// Normalize form controls
//
// While most of our form styles require extra classes, some basic normalization
// is required to ensure optimum display with or without those classes to better
// address browser inconsistencies.

// Position radios and checkboxes better
input[type="radio"],
input[type="checkbox"] {
  line-height: normal;
  margin: 4px 0 0;
  outline: none;
}

input[type="file"] {display: block;}

// Common form elements
//
// Shared size and type resets for form controls. Apply `.form-element` to any
// of the following form controls:
//
// select
// textarea
// input[type="text"]
// input[type="password"]
// input[type="datetime"]
// input[type="datetime-local"]
// input[type="date"]
// input[type="month"]
// input[type="time"]
// input[type="week"]
// input[type="number"]
// input[type="email"]
// input[type="url"]
// input[type="search"]
// input[type="tel"]
// input[type="color"]

.form-element {
  @include box-sizing(border-box);
  background-color: $input-bg;
  background-image: none; // Reset unusual Firefox-on-Android default style; see https://github.com/necolas/normalize.css/issues/214
  border-radius: $input-border-radius; // Note: This has no effect on <select>s in some browsers, due to the limited stylability of <select>s in CSS.
  border: 1px solid $input-border;
  color: $gray-dark;
  display: block;
  font-size: $font-size-base;
  height: 45px; // Make inputs at least the height of their button counterpart (base line-height + padding + border)
  line-height: $line-height-base;
  outline: none;
  padding: $padding-base-vertical + 7px $padding-base-horizontal;
  width: 100%;
  @include box-shadow(none);
  -webkit-appearance: none;
  @media only screen and (min-width: $xl-breakpoint) {
    height: 49px; // Make inputs at least the height of their button counterpart (base line-height + padding + border)
    padding: $padding-base-vertical + 10px $padding-base-horizontal;
  }
    &::-webkit-input-placeholder {
      @include box-shadow(none);
      color: $gray-dark;
      opacity: 1;
    }
    &::-moz-placeholder {
      color: $gray-dark;
      opacity: 1;
    }
    &:-ms-input-placeholder {color: $gray-dark;}

  // Error state of input
  &.has-error {
    @include box-shadow(inset 0 1px 1px rgba(#a94442, .5));
    border-color: #a94442;
  }

  // Unstyle the caret on `<select>`s in IE10+.
  &::-ms-expand {
    border: 0;
    background-color: transparent;
  }
}
.row-box {
  margin: 0 0 22px;
  position: relative;
  @media only screen and (min-width: $xl-breakpoint) {margin: 0 0 19px;}
  &.success {
    color: $brand-success;
    &:after {
      content: '\f058';
      font-family: $font-awesome;
      position: absolute;
      right: 15px;
      top: 11px;
    }
  }
}
.secondary-element {
  @include box-shadow(0 0 1px rgba(0,0,0,0.5));
  border: 3px solid $white;
  height: 40px;
  margin: 0;
  padding: 7px 30px 7px 10px;
  @media only screen and (min-width: $xl-breakpoint) {height: 45px;}
  &::-webkit-input-placeholder {
    color: $input-placeholder-color;
    opacity: 1;
  }
  &::-moz-placeholder {
    color: $input-placeholder-color;
    opacity: 1;
  }
  &:-ms-input-placeholder {color: $input-placeholder-color;}
  .error & {
    border-color: $brand-danger;
  }
}
.error-message {
  background: #f25e5e;
  bottom: 3px;
  color: $white;
  display: none;
  left: 3px;
  padding: 6px 12px;
  position: absolute;
  right: 2px;
  top: 3px;
  .error & {display: block;}
  @media only screen and (min-width: $xl-breakpoint) {padding: 8px 12px;}
  .fa {margin: 0 4px 0 0;}
}

.form-element + .form-element {margin-top: $padding-large-vertical;}

// Reset height for `textarea`s
textarea.form-element {
  height: auto;
  overflow: auto;
  resize: none;
}

// Special styles for iOS temporal inputs
//
// In Mobile Safari, setting `display: block` on temporal inputs causes the
// text within the input to become vertically misaligned. As a workaround, we
// set a pixel line-height that matches the given height of the input, but only
// for Safari. See https://bugs.webkit.org/show_bug.cgi?id=139848
//
// Note that as of 8.3, iOS doesn't support `datetime` or `week`.


// Form groups
//
// Designed to help with the organization and spacing of vertical forms. For
// horizontal forms, use the predefined grid classes.

.form-group {margin-bottom: $form-group-margin-bottom;}

// Checkboxes and radios
//
// Indent the labels to position radios/checkboxes as hanging controls.
.radio,
.checkbox {
  display: block;
  margin-bottom: 10px;
  margin-top: 10px;
  position: relative;
  label {
    cursor: pointer;
    font-weight: normal;
    margin-bottom: 0;
    min-height: $line-height-computed; // Ensure the input doesn't jump when there is no text
    padding-left: 20px;
    vertical-align: top;
  }
}
.radio input[type="radio"],
.radio-inline input[type="radio"],
.checkbox input[type="checkbox"],
.checkbox-inline input[type="checkbox"] {
  margin-left: -20px;
  margin-top: 4px;
  position: absolute;
}

.radio + .radio,
.checkbox + .checkbox {margin-top: -5px;} // Move up sibling radios or checkboxes for tighter spacing

// Radios and checkboxes on same line
.radio-inline,
.checkbox-inline {
  cursor: pointer;
  display: inline-block;
  font-weight: normal;
  margin-bottom: 0;
  padding-left: 20px;
  position: relative;
  vertical-align: middle;
}
.radio-inline + .radio-inline,
.checkbox-inline + .checkbox-inline {
  margin-left: 10px; // space out consecutive inline controls
  margin-top: 0;
}
.checkbox {
  margin: 0;
  padding: 0 0 10px;
  &.no-b-indent {padding-bottom: 5px;}
  input[type="checkbox"] {display: none;}
  input[type="checkbox"]:checked + label {
    &:before {display: block;}
  }
  label {
    position: relative;
    padding: 0 0 0 28px;
    span {
      padding: 0 0 0 3px;
      color: #a5a4a4;
    }
    &:after {
      @include border-radius(2px);
      background: $white;
      border: 1px solid $gray-dark;
      content: '';
      height: 15px;
      left: 1px;
      position: absolute;
      top: 1px;
      width: 15px;
    }
    &:before {
      background: $brand-success;
      color: #567308;
      content: '\f00c';
      display: none;
      font-family: $font-awesome;
      font-size: $font-size-small - 2px;
      height: 15px;
      left: 2px;
      position: absolute;
      text-align: center;
      top: 2px;
      width: 15px;
      z-index: 1;
    }
  }
}
.radio {
  margin: 0;
  padding: 0 0 10px;
  &.no-b-indent {padding-bottom: 5px;}
  input[type="radio"] {display: none;}
  input[type="radio"]:checked + label {
    &:before {display: block;}
  }
  label {
    min-height: 21px;
    padding: 0 0 0 28px;
    position: relative;
    span {
      padding: 0 0 0 3px;
      color: #a5a4a4;
    }
    &:after {
      @include border-radius(50%);
      background: $white;
      border: 1px solid $gray-dark;
      content: '';
      height: 15px;
      left: 1px;
      position: absolute;
      top: 1px;
      width: 15px;
    }
    &:before {
      @include border-radius(50%);
      background: $brand-success;
      color: #567308;
      content: '\f00c';
      display: none;
      font-family: $font-awesome;
      font-size: $font-size-small - 2px;
      height: 15px;
      left: 2px;
      position: absolute;
      text-align: center;
      top: 2px;
      width: 15px;
      z-index: 1;
    }
  }
}
.secondary-radio {
  margin: 0 0 21px;
  padding: 0;
  &.middle-b-indent {margin: 0 0 4px;}
  input[type="radio"]:checked + label {
    background: $gray-dark;
    border-color: $brand-warning;
    .title {color: $white;}
  }
  label {
    background: #fbfbfb;
    border: 1px solid #ececec;
    display: block;
    padding: 10px 7px 10px 30px;
    @media only screen and (min-width: $xl-breakpoint) {padding: 13px 10px 13px 46px;}
    &:after,
    &:before {
      left: 8px;
      margin: -7px 0 0;
      top: 50%;
      @media only screen and (min-width: $xl-breakpoint) {left: 17px;}
    }
    &:before {
      left: 9px;
      margin-top: -6px;
      @media only screen and (min-width: $xl-breakpoint) {left: 18px;}
    }
    .title {
      color: $gray-dark;
      display: block;
      padding: 0;
    }
  }
  .frame {
    display: inline-block;
    margin: 0 -4px 0 0;
    padding: 0;
    vertical-align: middle;
  }
  img {
    display: none;
    margin: 0 14px 0 0;
    vertical-align: middle;
    @media only screen and (min-width: $xl-breakpoint) {display: inline-block;}
  }
  img + .frame {
    @media only screen and (min-width: $xl-breakpoint) {width: 74%;}
  }
}

// Select
// --------------------------------------------------

.select-holder {
  @include border-radius(3px);
  background: $white;
  border: 1px solid #cecece;
  color: $gray-dark;
  cursor: pointer;
  outline: none;
  overflow: hidden;
  padding: 0;
  position: relative;
  width: 100%;
  z-index: 10;
  &.with-max-width {max-width: 197px;}
  &:after {
    content: '\f107';
    font-family: $font-awesome;
    position: absolute;
    right: 14px;
    top: 10px;
    z-index: 1;
    @media only screen and (min-width: $xl-breakpoint) {top: 11px;}
  }
  select {
    -moz-appearance: none;
    -webkit-appearance: none;
    appearance: none;
    background: transparent;
    border: none;
    color: $gray-dark;
    cursor: pointer;
    outline: none;
    padding: 10px 45px 10px 16px;
    position: relative;
    width: 100%;
    z-index: 10;
    @media only screen and (min-width: $md-breakpoint) {padding: 10px 45px 8px 16px;}
    @media only screen and (min-width: $xl-breakpoint) {padding: 12px 85px 11px 10px;}
    &::-ms-expand {display: none;}
  }
  option {
    background: $white;
    padding: 0 0 0 16px;
    @media only screen and (min-width: $xl-breakpoint) {padding: 0 0 0 10px;}
  }
}

.row {
  margin: 0 0 15px;
  overflow: hidden;
}